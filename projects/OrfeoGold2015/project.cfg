[configuration]
url			=	http://arborator.ilpga.fr/   # don't forget the trailing slash!
functionsfilename 		=	functions.config
categoriesfilename 		=	categories.config
defaultfunction		=	ADV
defaultcategory 		=	NN
defaultNumberSentences		=	50
newTree			=	nouvel arbre
erase			=	--ERASE--
root			=	ROOT
categoryindex		=	1 # the index in the list of shown features that will use category colors and open when clicked on 
defaultUser 		= 	default
directory			=	arborator
ericfuncsfilename 		=	ericfuncs.config
ericcatsfilename		=	ericcats.config
corpusfolder		=	corpus # in the root folder
db			=	arborator.db.sqlite
showAllTrees		=	True # TODO: bad hack
exportfolder		=	export # in the project folder
importAnnotatorName		=	parser # edit only before entering texts into the database
teacher	=	prof 
#baseAnnotatorName		=	prof # name of user that should serve as the base for the annotator to start her tree
#exoBaseAnnotatorName	=	x # name of user that should serve as the base for the student to start her tree
treeorder			=	newest # order of trees per sentence. what to put first. choices: newest, user, importAnnotator, default (alphabetical)
showTreesOfValidatedTexts	=	1 # give the number of the text status (see below) to be shown to all, anything but the numbers in text status will switch off this feature
allVisibleForNonAnnotators	=	1 # if 0: no, if 1: yes=if a user is not registered as annotator, she can see every tree
validatorsCanModifyTokens	=	1 # if 0 modif only by admins; if 1: validators, too
editable			=	1


[shown features]  # you decide which of the features of the token will be shown: t=token, cat=tag, ...
0 			=	t
1			=	tag
2			=	lemma

[shown sentencefeatures]  # you decide which of the features of the sentence will be shown: 
0 			=	markupIU

############################## scores for evalutation of student annotators #############
[evalutation scores]
governors			=	0
functions			=	0
categories			=	100
lemmas			=	0

############################## users whose annotation is visible to everyone #############
[visible to everyone]
0 			=	guest
1			=	parser


############################## different status of a text  #############
[text status]
0 			=	todo
1			=	ok
2			=	problem

############################## different status of a tree #############
[tree status]
0 			=	todo
1			=	ok
2			=	problem


############################## appearance of the tree javascript!!! #############
[look]
look			=	'''
tab=8; 			// space between tokens
line=25 		// line height
dependencyspace=320; 	// y-space for dependency representation
xoff=8; 		// placement of the start of a depdency link in relation to the center of the word
linedeps=6; 		// y distance between two arrows arriving at the same token (rare case)
pois=4; 		// size of arrow pointer
tokdepdist=15; 		// distance between tokens and depdendency relation
funccurvedist=8;	// distance between the function name and the curves highest point
depminh = 15; 		// minimum height for dependency
worddistancefactor = 2; // distant words get higher curves. this factor fixes how much higher.
rootTriggerSquare = 50; // distance from top of svg above which root connections are created and minimum width of this zone (from 0 to 50 par example the connection jumps to the middle)
extraspace=50 // extends the width of the svg in order to fit larger categories
defaultattris={"font": '14px "Arial"', "text-anchor":'start'};
attris = {"t":		{"font": '18px "Arial"', "text-anchor":'start',"fill": '#000',"cursor":'move',"stroke-width": '0'}, 
	  "cat":	{"font": '12px "Times"', "text-anchor":'start',"fill": '#036',"cursor":'pointer'},
	  "lemma":	{"font": '14px "Times"', "text-anchor":'start',"fill": '#036'},
	  "depline":	{"stroke": '#999',"stroke-width":'1',"stroke-dasharray": ''},
	  "deptext":	{"font": '12px "Times"', "font-style":'italic', "fill": '#999',"cursor":'pointer'},
	  "dragdepline":	{"stroke": '#8C1430',"stroke-width":'2',"stroke-dasharray": ''},
	  "dragdeplineroot":	{"stroke": '#985E16',"stroke-width":'2',"stroke-dasharray": ''},
	  "source":	{"fill": '#245606'},
	  "target":	{"fill": '#8C1430',"cursor": 'url("images/connect.png"),pointer', "font-style":'italic'}, 
	  "form":	{"font-style":'italic'}
	  };
'''
